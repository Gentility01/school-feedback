# Generated by Django 4.2.6 on 2023-10-24 06:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MainUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("full_name", models.CharField(max_length=200)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")],
                        default="male",
                        max_length=20,
                    ),
                ),
                (
                    "faculty",
                    models.CharField(
                        choices=[
                            ("Faculty of Agriculture", "Faculty of Agriculture"),
                            (
                                "Faculty of Basic Medical Sciences",
                                "Faculty of Basic Medical Sciences",
                            ),
                            (
                                "Faculty of Biological Science",
                                "Faculty of Biological Science",
                            ),
                            (
                                "Faculty of College of Medical Sciences",
                                "Faculty of College of Medical Sciences",
                            ),
                            ("Faculty of Education", "Faculty of Education"),
                            (
                                "Faculty of Engineering and Technology",
                                "Faculty of Engineering and Technology",
                            ),
                            (
                                "Faculty of Environmental Sciences",
                                "Faculty of Environmental Sciences",
                            ),
                            ("Faculty of Humanities", "Faculty of Humanities"),
                            (
                                "Faculty of Management Sciences",
                                "Faculty of Management Sciences",
                            ),
                            (
                                "Faculty of Physical Science",
                                "Faculty of Physical Science",
                            ),
                            (
                                "Faculty of Social Sciences",
                                "Faculty of Social Sciences",
                            ),
                        ],
                        default="Faculty of Agriculture",
                        max_length=50,
                    ),
                ),
                ("registration_number", models.CharField(max_length=10, unique=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Lecturer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        choices=[
                            ("English", "English Department"),
                            ("Math", "Mathematics Department"),
                            ("Science", "Science Department"),
                            ("Social Studies", "Social Studies Department"),
                            ("Foreign Language", "Foreign Language Department"),
                            ("Physical Education", "Physical Education Department"),
                            ("Art", "Art Department"),
                            ("Music", "Music Department"),
                            ("Technology", "Technology Department"),
                            ("Special Education", "Special Education Department"),
                            ("Counseling", "Counseling Department"),
                            ("Administration", "Administration Department"),
                        ],
                        default="Art",
                        max_length=50,
                    ),
                ),
                ("lecturer_id", models.CharField(max_length=10, unique=True)),
                (
                    "position",
                    models.CharField(
                        choices=[
                            (
                                "Provost/Chief Academic Officer",
                                "Provost/Chief Academic Officer",
                            ),
                            ("Dean of Students", "Dean of Students"),
                            ("Registrar", "Registrar"),
                            ("Director of Admissions", "Director of Admissions"),
                            ("Financial Aid Director", "Financial Aid Director"),
                            ("Chief Financial Officer", "Chief Financial Officer"),
                            (
                                "Director of Human Resources",
                                "Director of Human Resources",
                            ),
                            (
                                "Director of Campus Facilities/Physical Plant",
                                "Director of Campus Facilities/Physical Plant",
                            ),
                            ("Chief Information Officer", "Chief Information Officer"),
                            (
                                "Director of Research and Sponsored Programs",
                                "Director of Research and Sponsored Programs",
                            ),
                            ("Alumni Relations Director", "Alumni Relations Director"),
                            (
                                "International Programs Director",
                                "International Programs Director",
                            ),
                            (
                                "Diversity and Inclusion Officer",
                                "Diversity and Inclusion Officer",
                            ),
                            ("Athletic Director", "Athletic Director"),
                        ],
                        default="Dean of Students",
                        max_length=50,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
